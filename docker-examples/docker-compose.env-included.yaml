services:
  file-shifter:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: file-shifter
    restart: unless-stopped
    
    # Moderne Environment-Variablen-Struktur
    environment:
      # Logging
      LOG_LEVEL: INFO
      
      # Input-Directory
      INPUT: /app/input
      
      # File Stability
      FILE_STABILITY_MAX_RETRIES: 30
      FILE_STABILITY_CHECK_INTERVAL: 1
      FILE_STABILITY_PERIOD: 1
      
      # Output-Targets (flache Struktur)
      OUTPUT_1_PATH: /app/output/filesystem1
      OUTPUT_1_TYPE: filesystem
      OUTPUT_2_PATH: /app/output/filesystem2
      OUTPUT_2_TYPE: filesystem
      OUTPUT_3_PATH: s3://my-bucket/output3
      OUTPUT_3_TYPE: s3
      OUTPUT_3_ENDPOINT: minio:9000
      OUTPUT_3_ACCESS_KEY: minioadmin
      OUTPUT_3_SECRET_KEY: minioadmin
      OUTPUT_3_SSL: false
      OUTPUT_3_REGION: eu-central-1
    
    # Volumes
    volumes:
      - ./input:/app/input
      - ./output:/app/output
      - ./config:/app/config:ro  # Config-Files readonly
    
    # Netzwerk
    networks:
      - file-shifter-network
    
    # Abhängigkeiten (optional - falls MinIO verwendet wird)
    depends_on:
      - minio

  # MinIO-Service (für S3-kompatible Storage)
  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_REGION: eu-central-1
    volumes:
      - minio_data:/data
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    command: server /data --console-address ":9001"
    networks:
      - file-shifter-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

networks:
  file-shifter-network:
    driver: bridge

volumes:
  minio_data: